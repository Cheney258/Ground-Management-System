{"remainingRequest":"C:\\Users\\22419\\Desktop\\校园运动场地系统\\app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\22419\\Desktop\\校园运动场地系统\\app\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\22419\\Desktop\\校园运动场地系统\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\22419\\Desktop\\校园运动场地系统\\app\\src\\views\\users\\query\\apply\\field.vue?vue&type=template&id=2ca4853e&scoped=true&","dependencies":[{"path":"C:\\Users\\22419\\Desktop\\校园运动场地系统\\app\\src\\views\\users\\query\\apply\\field.vue","mtime":1648833832389},{"path":"C:\\Users\\22419\\Desktop\\校园运动场地系统\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\22419\\Desktop\\校园运动场地系统\\app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\22419\\Desktop\\校园运动场地系统\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\22419\\Desktop\\校园运动场地系统\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}