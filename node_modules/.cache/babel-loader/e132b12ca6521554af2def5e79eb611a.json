{"remainingRequest":"C:\\Users\\22419\\Desktop\\校园运动场地管理系统\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\22419\\Desktop\\校园运动场地管理系统\\app\\src\\permission.js","dependencies":[{"path":"C:\\Users\\22419\\Desktop\\校园运动场地管理系统\\app\\src\\permission.js","mtime":1648544809070},{"path":"C:\\Users\\22419\\Desktop\\校园运动场地管理系统\\app\\babel.config.js","mtime":1637306514000},{"path":"C:\\Users\\22419\\Desktop\\校园运动场地管理系统\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\22419\\Desktop\\校园运动场地管理系统\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiQzovVXNlcnMvMjI0MTkvRGVza3RvcC9cdTY4MjFcdTU2RURcdThGRDBcdTUyQThcdTU3M0FcdTU3MzBcdTdCQTFcdTc0MDZcdTdDRkJcdTdFREYvYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyLmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzLzIyNDE5L0Rlc2t0b3AvXHU2ODIxXHU1NkVEXHU4RkQwXHU1MkE4XHU1NzNBXHU1NzMwXHU3QkExXHU3NDA2XHU3Q0ZCXHU3RURGL2FwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IHJvdXRlciBmcm9tICcuL3JvdXRlcic7CmltcG9ydCBzdG9yZSBmcm9tICcuL3N0b3JlJzsKaW1wb3J0IHsgTWVzc2FnZSB9IGZyb20gJ2VsZW1lbnQtdWknOwppbXBvcnQgTlByb2dyZXNzIGZyb20gJ25wcm9ncmVzcyc7IC8vIHByb2dyZXNzIGJhcgoKaW1wb3J0ICducHJvZ3Jlc3MvbnByb2dyZXNzLmNzcyc7IC8vIHByb2dyZXNzIGJhciBzdHlsZQoKaW1wb3J0IHsgZ2V0VG9rZW4gfSBmcm9tICdAL3V0aWxzL2F1dGgnOyAvLyBnZXQgdG9rZW4gZnJvbSBjb29raWUKCmltcG9ydCBnZXRQYWdlVGl0bGUgZnJvbSAnQC91dGlscy9nZXQtcGFnZS10aXRsZSc7Ck5Qcm9ncmVzcy5jb25maWd1cmUoewogIHNob3dTcGlubmVyOiBmYWxzZQp9KTsgLy8gTlByb2dyZXNzIENvbmZpZ3VyYXRpb24KCnZhciB3aGl0ZUxpc3QgPSBbJy9sb2dpbiddOyAvLyBubyByZWRpcmVjdCB3aGl0ZWxpc3QKCnJvdXRlci5iZWZvcmVFYWNoKCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHRvLCBmcm9tLCBuZXh0KSB7CiAgICB2YXIgaGFzVG9rZW4sIGhhc1JvbGVzLCByZXN1bHRzLCByb2xlcywgYWNjZXNzUm91dGVzOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAvLyBzdGFydCBwcm9ncmVzcyBiYXIKICAgICAgICAgICAgTlByb2dyZXNzLnN0YXJ0KCk7IC8vIHNldCBwYWdlIHRpdGxlCgogICAgICAgICAgICBkb2N1bWVudC50aXRsZSA9IGdldFBhZ2VUaXRsZSh0by5tZXRhLnRpdGxlKTsgLy8gZGV0ZXJtaW5lIHdoZXRoZXIgdGhlIHVzZXIgaGFzIGxvZ2dlZCBpbgoKICAgICAgICAgICAgaGFzVG9rZW4gPSBnZXRUb2tlbigpOwoKICAgICAgICAgICAgaWYgKCFoYXNUb2tlbikgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzNjsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKCEodG8ucGF0aCA9PT0gJy9sb2dpbicpKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDk7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vIGlmIGlzIGxvZ2dlZCBpbiwgcmVkaXJlY3QgdG8gdGhlIGhvbWUgcGFnZQogICAgICAgICAgICBuZXh0KHsKICAgICAgICAgICAgICBwYXRoOiAnLycKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIE5Qcm9ncmVzcy5kb25lKCk7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzNDsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAvLyBkZXRlcm1pbmUgd2hldGhlciB0aGUgdXNlciBoYXMgb2J0YWluZWQgaGlzIHBlcm1pc3Npb24gcm9sZXMgdGhyb3VnaCBnZXRJbmZvCiAgICAgICAgICAgIGhhc1JvbGVzID0gc3RvcmUuZ2V0dGVycy5yb2xlcyAmJiBzdG9yZS5nZXR0ZXJzLnJvbGVzLmxlbmd0aCA+IDA7CgogICAgICAgICAgICBpZiAoIWhhc1JvbGVzKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE0OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBuZXh0KCk7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzNDsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE0OwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTc7CiAgICAgICAgICAgIHJldHVybiBzdG9yZS5kaXNwYXRjaCgndXNlci9nZXRJbmZvJyk7CgogICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgICAgcmVzdWx0cyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIHJvbGVzID0gW3Jlc3VsdHMudWlkID09IDEgPyAnZWRpdG9yJyA6ICdhZG1pbiddOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjE7CiAgICAgICAgICAgIHJldHVybiBzdG9yZS5kaXNwYXRjaCgncGVybWlzc2lvbi9nZW5lcmF0ZVJvdXRlcycsIHJvbGVzKTsKCiAgICAgICAgICBjYXNlIDIxOgogICAgICAgICAgICBhY2Nlc3NSb3V0ZXMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhhY2Nlc3NSb3V0ZXMpCiAgICAgICAgICAgIHJvdXRlci5hZGRSb3V0ZXMoYWNjZXNzUm91dGVzKTsKICAgICAgICAgICAgbmV4dChfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHRvKSwge30sIHsKICAgICAgICAgICAgICByZXBsYWNlOiB0cnVlCiAgICAgICAgICAgIH0pKTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM0OwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDI2OgogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMjY7CiAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMTQpOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzA7CiAgICAgICAgICAgIHJldHVybiBzdG9yZS5kaXNwYXRjaCgndXNlci9yZXNldFRva2VuJyk7CgogICAgICAgICAgY2FzZSAzMDoKICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQudDApOwogICAgICAgICAgICBNZXNzYWdlLmVycm9yKF9jb250ZXh0LnQwLm1lc3NhZ2UgfHwgJ0hhcyBFcnJvcicpOwogICAgICAgICAgICBuZXh0KCIvbG9naW4/cmVkaXJlY3Q9Ii5jb25jYXQodG8ucGF0aCkpOwogICAgICAgICAgICBOUHJvZ3Jlc3MuZG9uZSgpOwoKICAgICAgICAgIGNhc2UgMzQ6CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzNzsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSAzNjoKICAgICAgICAgICAgLyogaGFzIG5vIHRva2VuKi8KICAgICAgICAgICAgaWYgKHdoaXRlTGlzdC5pbmRleE9mKHRvLnBhdGgpICE9PSAtMSkgewogICAgICAgICAgICAgIC8vIGluIHRoZSBmcmVlIGxvZ2luIHdoaXRlbGlzdCwgZ28gZGlyZWN0bHkKICAgICAgICAgICAgICBuZXh0KCk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgLy8gb3RoZXIgcGFnZXMgdGhhdCBkbyBub3QgaGF2ZSBwZXJtaXNzaW9uIHRvIGFjY2VzcyBhcmUgcmVkaXJlY3RlZCB0byB0aGUgbG9naW4gcGFnZS4KICAgICAgICAgICAgICBuZXh0KCIvbG9naW4/cmVkaXJlY3Q9Ii5jb25jYXQodG8ucGF0aCkpOwogICAgICAgICAgICAgIE5Qcm9ncmVzcy5kb25lKCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICBjYXNlIDM3OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMTQsIDI2XV0pOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIChfeCwgX3gyLCBfeDMpIHsKICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpKTsKcm91dGVyLmFmdGVyRWFjaChmdW5jdGlvbiAoKSB7CiAgLy8gZmluaXNoIHByb2dyZXNzIGJhcgogIE5Qcm9ncmVzcy5kb25lKCk7Cn0pOw=="},{"version":3,"sources":["C:/Users/22419/Desktop/校园运动场地管理系统/app/src/permission.js"],"names":["router","store","Message","NProgress","getToken","getPageTitle","configure","showSpinner","whiteList","beforeEach","to","from","next","start","document","title","meta","hasToken","path","done","hasRoles","getters","roles","length","dispatch","results","uid","accessRoutes","addRoutes","replace","console","log","error","message","indexOf","afterEach"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,SAAP,MAAsB,WAAtB,C,CAAkC;;AAClC,OAAO,yBAAP,C,CAAiC;;AACjC,SAASC,QAAT,QAAyB,cAAzB,C,CAAwC;;AACxC,OAAOC,YAAP,MAAyB,wBAAzB;AAEAF,SAAS,CAACG,SAAV,CAAoB;AAAEC,EAAAA,WAAW,EAAE;AAAf,CAApB,E,CAA4C;;AAE5C,IAAMC,SAAS,GAAG,CAAC,QAAD,CAAlB,C,CAA6B;;AAE7BR,MAAM,CAACS,UAAP;AAAA,qEAAkB,iBAAMC,EAAN,EAAUC,IAAV,EAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAChB;AACAT,YAAAA,SAAS,CAACU,KAAV,GAFgB,CAIhB;;AACAC,YAAAA,QAAQ,CAACC,KAAT,GAAiBV,YAAY,CAACK,EAAE,CAACM,IAAH,CAAQD,KAAT,CAA7B,CALgB,CAOhB;;AACME,YAAAA,QARU,GAQCb,QAAQ,EART;;AAAA,iBAUZa,QAVY;AAAA;AAAA;AAAA;;AAAA,kBAWVP,EAAE,CAACQ,IAAH,KAAY,QAXF;AAAA;AAAA;AAAA;;AAYZ;AACAN,YAAAA,IAAI,CAAC;AAAEM,cAAAA,IAAI,EAAE;AAAR,aAAD,CAAJ;AAEAf,YAAAA,SAAS,CAACgB,IAAV;AAfY;AAAA;;AAAA;AAiBZ;AACMC,YAAAA,QAlBM,GAkBKnB,KAAK,CAACoB,OAAN,CAAcC,KAAd,IAAuBrB,KAAK,CAACoB,OAAN,CAAcC,KAAd,CAAoBC,MAApB,GAA6B,CAlBzD;;AAAA,iBAoBRH,QApBQ;AAAA;AAAA;AAAA;;AAqBVR,YAAAA,IAAI;AArBM;AAAA;;AAAA;AAAA;AAAA;AAAA,mBAwBcX,KAAK,CAACuB,QAAN,CAAe,cAAf,CAxBd;;AAAA;AAwBFC,YAAAA,OAxBE;AA0BFH,YAAAA,KA1BE,GA0BM,CAACG,OAAO,CAACC,GAAR,IAAe,CAAf,GAAmB,QAAnB,GAA8B,OAA/B,CA1BN;AAAA;AAAA,mBA4BmBzB,KAAK,CAACuB,QAAN,CAAe,2BAAf,EAA4CF,KAA5C,CA5BnB;;AAAA;AA4BFK,YAAAA,YA5BE;AA8BR;AAEA3B,YAAAA,MAAM,CAAC4B,SAAP,CAAiBD,YAAjB;AAEAf,YAAAA,IAAI,iCAAMF,EAAN;AAAUmB,cAAAA,OAAO,EAAE;AAAnB,eAAJ;AAlCQ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,mBAqCF5B,KAAK,CAACuB,QAAN,CAAe,iBAAf,CArCE;;AAAA;AAsCRM,YAAAA,OAAO,CAACC,GAAR;AACA7B,YAAAA,OAAO,CAAC8B,KAAR,CAAc,YAAMC,OAAN,IAAiB,WAA/B;AAEArB,YAAAA,IAAI,2BAAoBF,EAAE,CAACQ,IAAvB,EAAJ;AAEAf,YAAAA,SAAS,CAACgB,IAAV;;AA3CQ;AAAA;AAAA;;AAAA;AAmEd;AAEA,gBAAIX,SAAS,CAAC0B,OAAV,CAAkBxB,EAAE,CAACQ,IAArB,MAA+B,CAAC,CAApC,EAAuC;AACrC;AACAN,cAAAA,IAAI;AACL,aAHD,MAGO;AACL;AACAA,cAAAA,IAAI,2BAAoBF,EAAE,CAACQ,IAAvB,EAAJ;AACAf,cAAAA,SAAS,CAACgB,IAAV;AACD;;AA5Ea;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA;AAgFAnB,MAAM,CAACmC,SAAP,CAAiB,YAAM;AACrB;AACAhC,EAAAA,SAAS,CAACgB,IAAV;AACD,CAHD","sourcesContent":["import router from './router'\nimport store from './store'\nimport { Message } from 'element-ui'\nimport NProgress from 'nprogress' // progress bar\nimport 'nprogress/nprogress.css' // progress bar style\nimport { getToken } from '@/utils/auth' // get token from cookie\nimport getPageTitle from '@/utils/get-page-title'\n\nNProgress.configure({ showSpinner: false }) // NProgress Configuration\n\nconst whiteList = ['/login'] // no redirect whitelist\n\nrouter.beforeEach(async(to, from, next) => {\n  // start progress bar\n  NProgress.start()\n\n  // set page title\n  document.title = getPageTitle(to.meta.title)\n\n  // determine whether the user has logged in\n  const hasToken = getToken()\n\n  if (hasToken) {\n    if (to.path === '/login') {\n      // if is logged in, redirect to the home page\n      next({ path: '/' })\n\n      NProgress.done()\n    } else {\n      // determine whether the user has obtained his permission roles through getInfo\n      const hasRoles = store.getters.roles && store.getters.roles.length > 0\n\n      if (hasRoles) {\n        next()\n      } else {\n        try {\n          const results = await store.dispatch('user/getInfo')\n\n          const roles = [results.uid == 1 ? 'editor' : 'admin']\n\n          const accessRoutes = await store.dispatch('permission/generateRoutes', roles)\n\n          // console.log(accessRoutes)\n\n          router.addRoutes(accessRoutes)\n\n          next({ ...to, replace: true })\n        } catch (error) {\n          // remove token and go to login page to re-login\n          await store.dispatch('user/resetToken')\n          console.log(error)\n          Message.error(error.message || 'Has Error')\n\n          next(`/login?redirect=${to.path}`)\n\n          NProgress.done()\n        }\n      }\n\n      // const hasGetUserInfo = store.getters.name\n      // if (hasGetUserInfo) {\n\n      //   next()\n      // } else {\n      //   try {\n      //     // get user info\n      //     await store.dispatch('user/getInfo')\n\n      //     next()\n      //   } catch (error) {\n      //     // remove token and go to login page to re-login\n      //     await store.dispatch('user/resetToken')\n      //     Message.error(error || 'Has Error')\n      //     next(`/login?redirect=${to.path}`)\n      //     NProgress.done()\n      //   }\n      // }\n    }\n  } else {\n    /* has no token*/\n\n    if (whiteList.indexOf(to.path) !== -1) {\n      // in the free login whitelist, go directly\n      next()\n    } else {\n      // other pages that do not have permission to access are redirected to the login page.\n      next(`/login?redirect=${to.path}`)\n      NProgress.done()\n    }\n  }\n})\n\nrouter.afterEach(() => {\n  // finish progress bar\n  NProgress.done()\n})\n"]}]}